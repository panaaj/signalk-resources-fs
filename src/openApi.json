{
    "openapi": "3.0.2",
    "info": {
        "version": "0.0.1",
        "title": "Signal K Resources API"
    },

    "tags": [
        {
            "name": "resources",
            "description": "Signal K Resources API"
        },
        {
            "name": "routes",
            "description": "Route operations"
        },
        {
            "name": "waypoints",
            "description": "Waypoint operations"
        },
        {
            "name": "notes",
            "description": "Note operations"
        },
        {
            "name": "regions",
            "description": "Region operations"
        }
    ],

    "components": {

        "schemas": {

            "signalKUuid": {
                "type": "string",
                "pattern": "urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$"
            },

            "signalKPosition": {
                "type": "object",
                "required": [
                    "latitude",
                    "longitude"
                ],
                "properties": {
                    "latitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "altitude": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },

            "resourceList": {
                "description": "List of Signal K resources",
                "type": "object",
                "additionalProperties": {
                    "oneOf": [
                        {"$ref": "#/components/schemas/routeResponseModel"},
                        {"$ref": "#/components/schemas/waypointResponseModel"},
                        {"$ref": "#/components/schemas/noteResponseModel"},
                        {"$ref": "#/components/schemas/regionResponseModel"}
                    ]
                }
            },

            "baseResponseModel": {
                "description": "Base model for resource object response",
                "type": "object",
                "required": ["timestamp", "$source"],
                "properties": {
                    "timestamp": {
                        "type": "string"
                    },
                    "$source": {
                        "type": "string"
                    }
                }
            },
            "routeResponseModel": {
                "allOf": [
                    {"$ref": "#/components/schemas/baseResponseModel"},
                    {"$ref": "#/components/schemas/route"}
                ]
            },
            "waypointResponseModel": {
                "allOf": [
                    {"$ref": "#/components/schemas/baseResponseModel"},
                    {"$ref": "#/components/schemas/waypoint"}
                ]
            },
            "noteResponseModel": {
                "allOf": [
                    {"$ref": "#/components/schemas/baseResponseModel"},
                    {"$ref": "#/components/schemas/note"}
                ]
            },
            "regionResponseModel": {
                "allOf": [
                    {"$ref": "#/components/schemas/baseResponseModel"},
                    {"$ref": "#/components/schemas/region"}
                ]
            },

            "route": {
                "type": "object",
                "description": "Signal K Route resource",
                "required": ["feature"],
                "properties": {
                    "name": { 
                        "type": "string",
                        "description": "Route's common name"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the route"
                    },
                    "distance": {
                        "description": "Total distance from start to end",
                        "type": "number"
                    },
                    "start": {
                        "description": "The waypoint UUID at the start of the route",
                        "allOf": [
                            {"$ref": "#/components/schemas/signalKUuid"}
                        ]
                    },
                    "end": {
                        "description": "The waypoint UUID at the end of the route",
                        "allOf": [
                            {"$ref": "#/components/schemas/signalKUuid"}
                        ]
                    },
                    "feature": {
                        "type": "object",
                        "title": "Feature",
                        "description": "A GeoJSON feature object which describes a route",
                        "properties": {
                            "geometry": {
                                "$ref": "#/components/schemas/geoJSONLineString"
                            },
                            "properties": {
                                "description": "Additional feature properties",
                                "type": "object",
                                "additionalProperties": true
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            
            "waypoint": {
                "type": "object",
                "description": "Signal K Waypoint resource",
                "required": ["feature"],
                "properties": {
                    "position": {
                        "description": "The waypoint position",
                        "allOf": [
                            {"$ref": "#/components/schemas/signalKPosition"}
                        ]
                    },
                    "feature": {
                        "type": "object",
                        "title": "Feature",
                        "description": "A GeoJSON feature object which describes a waypoint",
                        "properties": {
                            "geometry": {
                                "$ref": "#/components/schemas/geoJSONPoint"
                            },
                            "properties": {
                                "description": "Additional feature properties",
                                "type": "object",
                                "additionalProperties": true
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            },

            "note": {
                "type": "object",
                "description": "Signal K Note resource",
                "required": ["feature"],
                "properties": {
                    "title": { 
                        "type": "string",
                        "description": "Common Note name"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the note"
                    },
                    "position": {
                        "description": "Position related to note. Alternative to region or geohash.",
                        "allOf": [
                            {"$ref": "#/components/schemas/signalKPosition"}
                        ]
                    },
                    "region": {
                        "description": "Pointer / path to Region related to note (e.g. /resources/routes/{uuid}. Alternative to position or geohash",
                        "allOf": [
                            {"$ref": "#/components/schemas/signalKUuid"}
                        ]
                    },
                    "geohash": {
                        "description": "Area related to note. Alternative to region or position",
                        "type": "string"
                    },
                    "mimeType": {
                        "description": "MIME type of the note",
                        "type": "string"
                    },
                    "url": {
                        "description": "Location of the note content",
                        "type": "string"
                    }
                }
            },

            "region": {
                "type": "object",
                "description": "Signal K Region resource",
                "required": ["feature"],
                "properties": {
                    "geohash": {
                        "description": "geohash of the approximate boundary of this region",
                        "type": "string"
                    },
                    "feature": {
                        "type": "object",
                        "title": "Feature",
                        "description": "A Geo JSON feature object which describes the regions boundary",
                        "properties": {
                            "geometry": {
                                "oneOf": [
                                    {"$ref": "#/components/schemas/geoJSONPolygon"},
                                    {"$ref": "#/components/schemas/geoJSONMultiPolygon"}
                                ]
                            },
                            "properties": {
                                "description": "Additional feature properties",
                                "type": "object",
                                "additionalProperties": true
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }   
            },

            "geoJSONPosition": {
                "type": "array",
                "maxItems": 3,
                "minItems": 2,
                "items": {
                    "type": "number"
                }
            },
                
            "geoJSONPoint": {
                "type": "object",
                "description": "GeoJSon geometry",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["Point"]
                    }
                },
                "coordinates": {
                  "$ref": "#/components/schemas/geoJSONPosition"
                }
            },
                      
            "geoJSONLineString": {
                "type": "object",
                "description": "GeoJSon geometry",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["LineString"]
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/geoJSONPosition"
                        }
                    }
                }
            },
        
            "geoJSONPolygon": {
                "type": "object",
                "description": "GeoJSon geometry",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["Polygon"]
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/geoJSONPosition"
                            }
                        }
                    }
                }
            },

            "geoJSONMultiPolygon": {
                "type": "object",
                "description": "GeoJSon geometry",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["MultiPolygon"]
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/geoJSONPosition"
                                }
                            }
                        }
                    }
                }
            }

        },

        "responses": {

            "200Ok": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "requestId": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "statusCode": {
                                    "type": "number",
                                    "enum": [200]
                                }
                            },
                            "required": [
                                "requestId",
                                "statusCode"
                            ]
                        }
                    }
                }
            },

            "202Pending": {
                "description": "Pending operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Request pending completion",
                            "properties": {
                                "requestId": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "statusCode": {
                                    "type": "number",
                                    "enum": [202]
                                },
                                "href": {
                                    "type": "string"
                                },
                                "required": [
                                    "requestId",
                                    "statusCode",
                                    "href"
                                ]
                            }
                        }
                    }
                }
            },

            "401Unauthorized": {
                "description": "Authorization information is missing or invalid!"
            },
                
            "404NotFound": {
                "description": "The specified resource was not found!"
            },

            "errorResponse": {
                "description": "Failed operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Request error response",
                            "properties": {
                                "requestId": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "statusCode": {
                                    "type": "number",
                                    "enum": [200]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "requestId",
                                "statusCode",
                                "message"
                            ]
                        }
                    }
                }
            },

            "routeResponse": {
                "description": "Route record response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/routeResponseModel"
                        }
                    }
                }
            },
    
            "waypointResponse": {
                "description": "Waypoint record response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/waypointResponseModel"
                        }
                    }
                }
            },
                    
            "noteResponse": {
                "description": "Note record response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/noteResponseModel"
                        }
                    }
                }
            },       
                    
            "regionResponse": {
                "description": "Region record response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RegionResponseModel"
                        }
                    }
                }
            }

        },

        "parameters": {

            "limit": {
                "in": "query", 
                "name": "limit",
                "description": "Maximum number of records to return",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "example": 100
                }
            },

            "radius": {
                "in": "query",
                "name": "radius",
                "description": "Limit results to resources that fall within a square area, centered around the vessel's position, the edges of which are the sepecified distance in meters from the vessel.",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 100,
                    "example": 2000 
                }
            },

            "geoHash": {
                "in": "query",
                "name": "geohash",
                "description": "limit results to resources that fall within an area sepecified by the geohash.",
                "schema": {
                    "type": "string"
                }
            },

            "boundingBox": {
                "in": "query",
                "name": "bbox",
                "description": "Limit results to resources that fall within the bounded area defined as lower left and upper right x,y coordinates x1,y1,x2,y2",
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 4,
                    "items": {
                        "type": "number",
                        "format": "float",
                        "example": [135.5,-25.2,138.1,-28.0]
                    }
                }
            }

        }
    },
    
    "paths": {

        "/resources/{resourceClass}/": {
            "get": {
                "tags": ["resources"],
                "summary": "Retrieve resources",
                "parameters": [
                    {
                        "name": "resourceClass",
                        "in": "path",
                        "description": "resource class",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["routes", "waypoints", "notes", "regions"],
                            "example": "waypoints"
                        }
                    },
                    {"$ref": "#/components/parameters/limit"}, 
                    {"$ref": "#/components/parameters/radius"},
                    {"$ref": "#/components/parameters/geoHash"},
                    {"$ref": "#/components/parameters/boundingBox"}
                ],  
                "responses": {
                    "200": {
                        "description": "List of resources identified by their UUID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resourceList"
                                }
                            }
                        }
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    }, 
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            }
        },

        "/resources/routes/": {
            "post": {
                "tags": ["routes"],
                "summary": "Add a new Route",
                "requestBody": {
                    "description": "Route details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/route"
                            },
                            "responses": {
                                "200": {
                                    "$ref": "#/components/responses/200Ok"
                                },
                                "202": {
                                    "$ref": "#/components/responses/202Pending"
                                },
                                "401": {
                                    "$ref": "#/components/responses/401Unauthorized"
                                },
                                "404": {
                                    "$ref": "#/components/responses/404NotFound"
                                },
                                "default": {
                                    "$ref": "#/components/responses/errorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/resources/routes/{id}": {
            "parameters": {
                "name": "id",
                "in": "path",
                "description": "route id",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/signalKUuid"
                }
            },
              
            "get": {
                "tags": ["routes"],
                "summary": "Retrieve route with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/routeResponse"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },

            "put": {
                "tags": ["routes"],
                "summary": "Add / update a new Route with supplied id",
                "requestBody": {
                    "description": "Route details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/route" 
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },
      
            "delete": {
                "tags": ["routes"],
                "summary": "Remove Route with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            }

        },

        "/resources/waypoints/": {
            "post": {
                "tags": ["waypoints"],
                "summary": "Add a new Waypoint",
                "requestBody": {
                    "description": "Waypoint details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/waypoint"
                            },
                            "responses": {
                                "200": {
                                    "$ref": "#/components/responses/200Ok"
                                },
                                "202": {
                                    "$ref": "#/components/responses/202Pending"
                                },
                                "401": {
                                    "$ref": "#/components/responses/401Unauthorized"
                                },
                                "404": {
                                    "$ref": "#/components/responses/404NotFound"
                                },
                                "default": {
                                    "$ref": "#/components/responses/errorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/resources/waypoints/{id}": {
            "parameters": {
                "name": "id",
                "in": "path",
                "description": "waypoint id",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/signalKUuid"
                }
            },
              
            "get": {
                "tags": ["waypoints"],
                "summary": "Retrieve waypoint with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/waypointResponse"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },

            "put": {
                "tags": ["waypoints"],
                "summary": "Add / update a new Waypoint with supplied id",
                "requestBody": {
                    "description": "Waypoint details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/waypoint" 
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },
      
            "delete": {
                "tags": ["waypoints"],
                "summary": "Remove Waypoint with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            }

        },

        "/resources/notes/": {
            "post": {
                "tags": ["notes"],
                "summary": "Add a new Note",
                "requestBody": {
                    "description": "Note details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/note"
                            },
                            "responses": {
                                "200": {
                                    "$ref": "#/components/responses/200Ok"
                                },
                                "202": {
                                    "$ref": "#/components/responses/202Pending"
                                },
                                "401": {
                                    "$ref": "#/components/responses/401Unauthorized"
                                },
                                "404": {
                                    "$ref": "#/components/responses/404NotFound"
                                },
                                "default": {
                                    "$ref": "#/components/responses/errorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/resources/notes/{id}": {
            "parameters": {
                "name": "id",
                "in": "path",
                "description": "note id",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/signalKUuid"
                }
            },
              
            "get": {
                "tags": ["notes"],
                "summary": "Retrieve Note with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/noteResponse"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },

            "put": {
                "tags": ["notes"],
                "summary": "Add / update a new Note with supplied id",
                "requestBody": {
                    "description": "Note details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/note" 
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },
      
            "delete": {
                "tags": ["notes"],
                "summary": "Remove Note with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            }

        },

        "/resources/regions/": {
            "post": {
                "tags": ["regions"],
                "summary": "Add a new Regkion",
                "requestBody": {
                    "description": "Region details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/region"
                            },
                            "responses": {
                                "200": {
                                    "$ref": "#/components/responses/200Ok"
                                },
                                "202": {
                                    "$ref": "#/components/responses/202Pending"
                                },
                                "401": {
                                    "$ref": "#/components/responses/401Unauthorized"
                                },
                                "404": {
                                    "$ref": "#/components/responses/404NotFound"
                                },
                                "default": {
                                    "$ref": "#/components/responses/errorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/resources/regions/{id}": {
            "parameters": {
                "name": "id",
                "in": "path",
                "description": "region id",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/signalKUuid"
                }
            },
              
            "get": {
                "tags": ["regions"],
                "summary": "Retrieve Region with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/regionResponse"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },

            "put": {
                "tags": ["regions"],
                "summary": "Add / update a new Region with supplied id",
                "requestBody": {
                    "description": "Region details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/region" 
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            },
      
            "delete": {
                "tags": ["regions"],
                "summary": "Remove Region with supplied id",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200Ok"
                    },
                    "202": {
                        "$ref": "#/components/responses/202Pending"
                    },
                    "401": {
                        "$ref": "#/components/responses/401Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/errorResponse"
                    }
                }
            }

        }
                
    }

}
    



  